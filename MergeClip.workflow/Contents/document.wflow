<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>AMApplicationBuild</key>
	<string>523</string>
	<key>AMApplicationVersion</key>
	<string>2.10</string>
	<key>AMDocumentVersion</key>
	<string>2</string>
	<key>actions</key>
	<array>
		<dict>
			<key>action</key>
			<dict>
				<key>AMAccepts</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Optional</key>
					<true/>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>AMActionVersion</key>
				<string>2.0.3</string>
				<key>AMApplication</key>
				<array>
					<string>Automator</string>
				</array>
				<key>AMParameterProperties</key>
				<dict>
					<key>COMMAND_STRING</key>
					<dict/>
					<key>CheckedForUserDefaultShell</key>
					<dict/>
					<key>inputMethod</key>
					<dict/>
					<key>shell</key>
					<dict/>
					<key>source</key>
					<dict/>
				</dict>
				<key>AMProvides</key>
				<dict>
					<key>Container</key>
					<string>List</string>
					<key>Types</key>
					<array>
						<string>com.apple.cocoa.string</string>
					</array>
				</dict>
				<key>ActionBundlePath</key>
				<string>/System/Library/Automator/Run Shell Script.action</string>
				<key>ActionName</key>
				<string>シェルスクリプトを実行</string>
				<key>ActionParameters</key>
				<dict>
					<key>COMMAND_STRING</key>
					<string>#!/bin/bash

# Set maximum character limit
MAX_CHARS=100000

# Initialize counts
totalCharacterCount=0
totalFileCount=0
mergedContent=""

# Function to check if a file is binary
is_binary() {
    file --mime-encoding "$1" | grep -q binary
}

# Function to process a single file
process_file() {
    local file="$1"

    if [ $totalCharacterCount -ge $MAX_CHARS ]; then
        echo "Reached character limit. Stopping scan."
        return 1
    fi

    if is_binary "$file"; then
        echo "Skipping binary file: $file"
        return 0
    fi

    filename=$(basename "$file")
    extension="${filename##*.}"

    fileContent="$filename\n\`\`\`$extension\n$(cat "$file")\n\`\`\`\n\n"
    fileCharCount=${#fileContent}

    if [ $((totalCharacterCount + fileCharCount)) -ge $MAX_CHARS ]; then
        echo "Adding this file would exceed the character limit. Stopping scan."
        return 1
    fi

    mergedContent+="$fileContent"
    totalCharacterCount=$((totalCharacterCount + fileCharCount))
    totalFileCount=$((totalFileCount + 1))
    return 0
}

# Function to process a directory
process_directory() {
    local directory="$1"

    while IFS= read -r -d '' file; do
        process_file "$file" || break
    done &lt; &lt;(find "$directory" -type f ! -name '.*' -print0)
}

# Check if arguments are provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 &lt;file1&gt; &lt;file2&gt; ... &lt;directory1&gt; &lt;directory2&gt; ..."
    exit 1
fi

# Process all arguments
for item in "$@"; do
    if [ -f "$item" ]; then
        process_file "$item"
    elif [ -d "$item" ]; then
        process_directory "$item"
    else
        echo "Error: '$item' is not a valid file or directory."
    fi
done

# Copy to clipboard using pbcopy
echo -e "$mergedContent" | pbcopy

# Get the character count of the clipboard content
clipboardCharCount=$(pbpaste | wc -m)

# Output the result
#echo "Total files processed: $totalFileCount"
#echo "Total characters in processed files: $totalCharacterCount"
#echo "Characters copied to clipboard: $clipboardCharCount"
#echo "Merged content has been copied to the clipboard."
# Check if the script is run from Finder

# GUI
osascript -e "display dialog \"$totalFileCount files merged and copied to clipboard. $totalCharacterCount characters in total.\" buttons {\"OK\"} default button \"OK\""
</string>
					<key>CheckedForUserDefaultShell</key>
					<true/>
					<key>inputMethod</key>
					<integer>1</integer>
					<key>shell</key>
					<string>/bin/zsh</string>
					<key>source</key>
					<string></string>
				</dict>
				<key>BundleIdentifier</key>
				<string>com.apple.RunShellScript</string>
				<key>CFBundleVersion</key>
				<string>2.0.3</string>
				<key>CanShowSelectedItemsWhenRun</key>
				<false/>
				<key>CanShowWhenRun</key>
				<true/>
				<key>Category</key>
				<array>
					<string>AMCategoryUtilities</string>
				</array>
				<key>Class Name</key>
				<string>RunShellScriptAction</string>
				<key>IgnoresInput</key>
				<false/>
				<key>InputUUID</key>
				<string>BC8B9C50-E4AE-4DBC-8542-8588CA1C8CFE</string>
				<key>Keywords</key>
				<array>
					<string>シェル</string>
					<string>スクリプト</string>
					<string>コマンド</string>
					<string>実行</string>
					<string>UNIX</string>
				</array>
				<key>OutputUUID</key>
				<string>5A4937E2-F5C5-4A0A-BC9E-7BA7042495B4</string>
				<key>ShowWhenRun</key>
				<false/>
				<key>UUID</key>
				<string>DFBCC6BC-2D02-4678-A84A-ED2EA16F74E7</string>
				<key>UnlocalizedApplications</key>
				<array>
					<string>Automator</string>
				</array>
				<key>arguments</key>
				<dict>
					<key>0</key>
					<dict>
						<key>default value</key>
						<integer>0</integer>
						<key>name</key>
						<string>inputMethod</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>0</string>
					</dict>
					<key>1</key>
					<dict>
						<key>default value</key>
						<false/>
						<key>name</key>
						<string>CheckedForUserDefaultShell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>1</string>
					</dict>
					<key>2</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>source</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>2</string>
					</dict>
					<key>3</key>
					<dict>
						<key>default value</key>
						<string></string>
						<key>name</key>
						<string>COMMAND_STRING</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>3</string>
					</dict>
					<key>4</key>
					<dict>
						<key>default value</key>
						<string>/bin/sh</string>
						<key>name</key>
						<string>shell</string>
						<key>required</key>
						<string>0</string>
						<key>type</key>
						<string>0</string>
						<key>uuid</key>
						<string>4</string>
					</dict>
				</dict>
				<key>isViewVisible</key>
				<integer>1</integer>
				<key>location</key>
				<string>309.000000:661.000000</string>
				<key>nibPath</key>
				<string>/System/Library/Automator/Run Shell Script.action/Contents/Resources/Base.lproj/main.nib</string>
			</dict>
			<key>isViewVisible</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>connectors</key>
	<dict/>
	<key>workflowMetaData</key>
	<dict>
		<key>applicationBundleIDsByPath</key>
		<dict/>
		<key>applicationPaths</key>
		<array/>
		<key>backgroundColorName</key>
		<string>blackColor</string>
		<key>inputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>outputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>presentationMode</key>
		<integer>15</integer>
		<key>processesInput</key>
		<false/>
		<key>serviceInputTypeIdentifier</key>
		<string>com.apple.Automator.fileSystemObject</string>
		<key>serviceOutputTypeIdentifier</key>
		<string>com.apple.Automator.nothing</string>
		<key>serviceProcessesInput</key>
		<false/>
		<key>systemImageName</key>
		<string>NSTouchBarDocuments</string>
		<key>useAutomaticInputType</key>
		<false/>
		<key>workflowTypeIdentifier</key>
		<string>com.apple.Automator.servicesMenu</string>
	</dict>
</dict>
</plist>
